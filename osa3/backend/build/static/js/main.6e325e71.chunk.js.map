{"version":3,"sources":["personService.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","catch","error","id","put","delete","Notification","msg","style","SubmitForm","handleNameChange","handleNumberChange","addPerson","newName","number","className","type","onChange","value","placeholder","onClick","SearchForm","handleSearchChange","addSearch","search","Phonebook","persons","match","deletePerson","filter","person","test","name","map","i","key","e","App","messageStyle","color","fontSize","bordeStyle","borderRadius","padding","marginBottom","errorStyle","useState","setPersons","setNewName","setNumber","RegExp","setMatch","setSearch","message","setMessage","setStyle","useEffect","personService","initialPersons","event","preventDefault","window","confirm","request","idx","indexOf","console","log","nPersons","per","setTimeout","target","result","find","personObject","undefined","returnedPerson","concat","str","JSON","stringify","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e325e71.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n//const baseUrl = 'https://afternoon-fjord-10807.herokuapp.com/api/persons';\n//const baseUrl = 'http://localhost:3001/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data)\n  .catch(error => {\n    throw error;\n  });\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n}\n\nconst deletePer = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n}\n\nexport default { getAll, create, update, deletePer };\n","import React, { useState, useEffect } from 'react';\nimport personService from './personService';\n\nconst Notification = ({ msg, style}) => {\n\n  if(msg === null) {\n    return null;\n  }\n\n  return (\n    <div style={style}>\n    {msg}\n    </div>\n  );\n}\n\nconst SubmitForm = ({handleNameChange, handleNumberChange,\n  addPerson, newName, number}) => (\n  <div className=\"container\">\n  <form className=\"form\">\n  <div className=\"form-group\">\n  <input type=\"text\" className=\"form-control\"\n  onChange={handleNameChange}\n  value={newName} placeholder=\"Name\" />\n  </div>\n  <div className=\"form-group\">\n  <input type=\"text\" className=\"form-control\"\n  onChange={handleNumberChange}\n  value={number} placeholder=\"number\"/>\n  </div>\n  <button type=\"button\" className=\"btn btn-primary\"\n  onClick={addPerson}>Add</button>\n  </form>\n  </div>\n);\n\nconst SearchForm = ({handleSearchChange, addSearch, search}) => (\n  <form className=\"form\">\n  <input type=\"text\" className=\"form-control\"\n  onChange={handleSearchChange}\n  value={search} placeholder=\"Search\" />\n  <button type=\"button\" className=\"btn btn-primary\"\n  onClick={addSearch}>Search</button>\n  </form>\n);\n\nconst Phonebook = ({persons, match, deletePerson}) => (\n  <div>\n  <h2>Phonebook</h2>\n  <ul>\n  {\n    persons.filter((person) =>\n      match.test(person.name))\n    .map((person, i) =>\n      <div key={i}>\n      <h5>{person.name}</h5>\n      <h5>{person.number}</h5>\n      <button\n      onClick={(e) => deletePerson(e, person)}\n      className='btn btn-danger'>\n      Del\n      </button>\n      </div>\n    )\n  }\n  </ul>\n  </div>\n)\n\nconst App = () => {\n\nconst messageStyle = {\n  color: 'green',\n  fontSize: '20px',\n  bordeStyle: 'solid',\n  borderRadius: '5px',\n  padding: '10px',\n  marginBottom: '10px'\n}\n\nconst errorStyle = {\n  color: 'red',\n  fontSize: '20px',\n  bordeStyle: 'solid',\n  borderRadius: '5px',\n  padding: '10px',\n  marginBottom: '10px'\n}\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [number, setNumber] = useState('');\n  const [match, setMatch]   = useState(new RegExp('[sS]*'));\n  const [search, setSearch] = useState('');\n  const [message, setMessage] = useState('');\n  const [style, setStyle] = useState(messageStyle);\n\n  useEffect(() => {\n    personService.getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons);\n    })\n  }, []);\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n    \n  const handleNumberChange = (event) => {\n    console.log(event.target.value);\n    setNumber(event.target.value);\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    var result = persons.find(person => {\n      return person.name === newName;\n    });\n\n    const personObject = {\n      name: newName,\n      number: number\n    };\n\n    if(result !== undefined) {\n      let r = window.confirm(\"set new number for \" + newName + \"?\");\n\n      if(r === false)\n        return;\n\n      personService.update(result.id, personObject)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== result.id\n          ? person : returnedPerson))\n      }).catch(error => {\n        setStyle(errorStyle);\n        setMessage(`${result.name} had been deleted`);\n        setTimeout(() => {\n          setMessage(null)\n          setStyle(messageStyle);\n        }, 5000);\n        console.log('Tried to delete non existing entry from server');\n        return;\n      });\n\n      setMessage(`${result.name}'s number was updated`);\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000);\n\n      setNewName('');\n      setNumber('');\n      return;\n    }\n      \n    setMessage(`${personObject.name} was added`);\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000);\n    personService.create(personObject)\n    .then(returnedPerson => {\n      if(returnedPerson !== undefined)\n        setPersons(persons.concat(returnedPerson));\n    }).catch((error) => {\n      console.log('failed creating person');\n      setStyle(errorStyle);\n      const str = JSON.stringify(error.response.data);\n      setMessage(`${str}`);\n      setTimeout(() => {\n        setMessage(null)\n        setStyle(messageStyle);\n      }, 5000);\n    });\n\n    setNewName('');\n    setNumber('');\n  }\n\n  const deletePerson = (event, person) => {\n    event.preventDefault();\n\n    let r = window.confirm('Sure you want to del ' + person.name + '?');\n\n    if(r === true) {\n      personService.deletePer(person.id)\n      .then(request => {\n        let idx = persons.indexOf(person);\n        console.log('idx ' + idx);\n\n        if(idx === -1)\n          return;\n\n        const nPersons = persons.filter((per) => per !== person);\n        setPersons([...nPersons]);\n\n        setMessage(`${person.name} was deleted`);\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000);\n      });\n    }\n  }\n\n  const addSearch = (event) => {\n    event.preventDefault();\n    setMatch(new RegExp(search));\n    setSearch('');\n  }\n\n  const handleSearchChange = (event) => {\n    console.log(event.target.value);\n    setSearch(event.target.value);\n  }\n\n  return (\n    <div>\n    <Notification msg={message} style={style}/>\n    <Phonebook persons={persons} match={match} deletePerson={deletePerson}/>\n    <SearchForm handleSearchChange={handleSearchChange}\n    addSearch={addSearch}\n    search={search}\n    />\n    <SubmitForm handleNameChange={handleNameChange} \n    handleNumberChange={handleNumberChange}\n    addPerson={addPerson}\n    newName={newName}\n    number={number}\n    />\n    <h2>Numbers</h2>\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}